apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  annotations:
    manifestival: new
    tekton.dev/displayName: s2i java
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: s2i, java, workspace
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    operator.tekton.dev/provider-type: redhat
  name: s2i-java-workshop
  ownerReferences:
  - apiVersion: operator.tekton.dev/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TektonInstallerSet
    name: addon-clustertasks-ft7s4
    uid: 4f592b7f-7a4c-4735-bf7e-55b9921f1e34
spec:
  description: s2i-java task clones a Git repository and builds and pushes a container
    image using S2I and a Java builder image.
  params:
  - default: latest
    description: The tag of java imagestream for java version
    name: VERSION
    type: string
  - default: .
    description: The location of the path to run s2i from
    name: PATH_CONTEXT
    type: string
  - default: "true"
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS
      registry)
    name: TLSVERIFY
    type: string
  - default: ""
    description: Additional Maven arguments
    name: MAVEN_ARGS_APPEND
    type: string
  - default: "false"
    description: Remove the Maven repository after the artifact is built
    name: MAVEN_CLEAR_REPO
    type: string
  - default: ""
    description: The base URL of a mirror used for retrieving artifacts
    name: MAVEN_MIRROR_URL
    type: string
  - description: Location of the repo where image has to be pushed
    name: IMAGE
    type: string
  - default: registry.redhat.io/rhel8/buildah@sha256:0a86ecbdfbe86e9d225b7fe4b090a0dd6d323f8afdfdf2bd933ff223ddb53320
    description: The location of the buildah builder image.
    name: BUILDER_IMAGE
    type: string
  - default: "false"
    description: Skip pushing the built image
    name: SKIP_PUSH
    type: string
  - default: ""
    description: The name of the ImageStream which should be updated
    name: IMAGESTREAM
    type: string
  - default: ""
    description: The Tag of the ImageStream which should be updated
    name: IMAGESTREAMTAG
    type: string
  results:
  - description: Digest of the image just built.
    name: IMAGE_DIGEST
    type: string
  steps:
  - args:
    - |-
      echo "MAVEN_CLEAR_REPO=$(params.MAVEN_CLEAR_REPO)" > env-file

      [[ '$(params.MAVEN_ARGS_APPEND)' != "" ]] &&
        echo "MAVEN_ARGS_APPEND=$(params.MAVEN_ARGS_APPEND)" >> env-file

      [[ '$(params.MAVEN_MIRROR_URL)' != "" ]] &&
        echo "MAVEN_MIRROR_URL=$(params.MAVEN_MIRROR_URL)" >> env-file

      echo "Generated Env file"
      echo "------------------------------"
      cat env-file
      echo "------------------------------"
    command:
    - /bin/sh
    - -c
    env:
    - name: HOME
      value: /tekton/home
    image: registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:98d8cb3a255641ca6a1bce854e5e2460c20de9fb9b28e3cc67eb459f122873dd
    name: gen-env-file
    resources: {}
    volumeMounts:
    - mountPath: /env-params
      name: envparams
    workingDir: /env-params
  - command:
    - s2i
    - build
    - $(params.PATH_CONTEXT)
    - image-registry.openshift-image-registry.svc:5000/openshift/java:$(params.VERSION)
    - --image-scripts-url
    - image:///usr/local/s2i
    - --as-dockerfile
    - /gen-source/Dockerfile.gen
    - --environment-file
    - /env-params/env-file
    env:
    - name: HOME
      value: /tekton/home
    image: registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:98d8cb3a255641ca6a1bce854e5e2460c20de9fb9b28e3cc67eb459f122873dd
    name: generate
    resources: {}
    volumeMounts:
    - mountPath: /gen-source
      name: gen-source
    - mountPath: /env-params
      name: envparams
    workingDir: $(workspaces.source.path)
  - image: $(params.BUILDER_IMAGE)
    name: build-and-push
    resources: {}
    script: |
      buildah bud --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) \
         --layers -f /gen-source/Dockerfile.gen -t $(params.IMAGE) .

      [[ "$(params.SKIP_PUSH)" == "true" ]] && echo "Push skipped" && exit 0
      buildah push --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) \
        --digestfile $(workspaces.source.path)/image-digest $(params.IMAGE) \
        docker://$(params.IMAGE)

      cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST
    securityContext:
      capabilities:
        add:
        - SETFCAP
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    - mountPath: /gen-source
      name: gen-source
    workingDir: /gen-source
  - env:
    - name: HOME
      value: /tekton/home
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
    name: update-image-stream
    resources: {}
    script: |
      #!/usr/bin/env bash
      oc tag --source=docker $(params.IMAGE) $(params.IMAGESTREAM):$(params.IMAGESTREAMTAG) --insecure
    securityContext:
      runAsNonRoot: true
      runAsUser: 65532
  volumes:
  - emptyDir: {}
    name: varlibcontainers
  - emptyDir: {}
    name: gen-source
  - emptyDir: {}
    name: envparams
  workspaces:
  - mountPath: /workspace/source
    name: source
